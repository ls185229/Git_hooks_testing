#!/usr/local/bin/tclsh

# $Id: mas_file_lib 4749 2018-10-15 16:41:25Z bjones $

if { [info exists MAS_FILE_LIB_LOADED] } {
    return
}

# Defining tcr records type , length and description below

# Mas file Header Record

set tcr(FH) {
    fhtrans_type             2 a {File Header Transmission Type}
    file_type                2 a {File Type}
    file_date_time          16 x {File Date and Time}
    activity_source         16 a {Activity Source}
    activity_job_name        8 a {Activity Job name}
    suspend_level            1 a {Suspend Level}
}

# Mas Batch Header Record

set tcr(BH) {
    bhtrans_type             2 a {Batch Header Transmission Type}
    batch_curr               3 a {Currency of the batch}
    activity_date_time_bh   16 x {System date and time}
    merchantid              30 a {ID of the merchant}
    inbatchnbr               9 n {Batch number}
    infilenbr                9 n {File number}
    billind                  1 a {Non Activity Batch Header Fee}
    orig_batch_id            9 a {Original Batch ID}
    orig_file_id             9 a {Original File ID}
    ext_batch_id            25 a {External Batch ID}
    ext_file_id             25 a {External File ID}
    sender_id               25 a {Merchant ID for the batch}
    microfilm_nbr           30 a {Microfilm Locator number}
    institution_id          10 a {Institution ID}
    batch_capture_dt        16 a {Batch Capture Date and Time}
}

# Mas Batch Trailer Record

set tcr(BT) {
    bttrans_type             2 a {Batch Trailer Transmission Type}
    batch_amt               12 n {Total Transaction Amount in a Batch}
    batch_cnt               10 n {Total Transaction count in a Batch}
    batch_add_amt1          12 n {Total additional1 amount in a Batch}
    batch_add_cnt1          10 n {Total additional1 count in a Batch}
    batch_add_amt2          12 n {Total additional2 amount in a Batch}
    batch_add_cnt2          10 n {Total additional2 count in a Batch}
}

# Mas File Trailer Record

set tcr(FT) {
    fttrans_type             2 a {File Trailer Transmission Type}
    file_amt                12 n {Total Transaction Amount in a File}
    file_cnt                10 n {Total Transaction count in a File}
    file_add_amt1           12 n {Total additional1 amount in a File}
    file_add_cnt1           10 n {Total additional1 count in a File}
    file_add_amt2           12 n {Total additional2 amount in a File}
    file_add_cnt2           10 n {Total additional2 count in a File}
}

# Mas Message Detail Record

set tcr(01) {
    mgtrans_type             2 a {Message Deatail Transmission Type}
    trans_id                12 a {Unique Transmission identifier}
    entity_id               18 a {Internal entity id}
    card_scheme              2 a {Card Scheme identifier}
    mas_code                25 a {Mas Code}
    mas_code_downgrade      25 a {Mas codes for Downgraded Transaction}
    nbr_of_items            10 n {Number of items in the transaction record}
    amt_original            12 n {Original amount of a Transaction}
    add_cnt1                10 n {Number of items included in add_amt1}
    add_amt1                12 n {Additional Amount 1}
    add_cnt2                10 n {Number of items included in add_amt2}
    add_amt2                12 n {Additional Amount 2}
    external_trans_id       25 a {The external transaction id}
    trans_ref_data          23 a {Reference Data}
    suspend_reason           2 a {The Suspend reason code}
}

# Procedure for construct tcr records according to above definitions.

proc write_tcr {aname} {
    global tcr
    upvar $aname a
    set l_tcr $a(tcr)
    set result {}

    foreach {fname flength ftype fdesc} $tcr(${l_tcr}) {

        switch -- $ftype {
            a {
                if {![info exists  a($fname)]} {
                    set  a($fname) {}
                }
                set t [format "%-${flength}.${flength}s" $a($fname)]
                set result "$result$t"
            }
            n {
                if {![info exists  a($fname)] || ($fname == "filler")} {
                    set  a($fname) 0
                }
                set t [format "%0${flength}.${flength}s" $a($fname)]
                set result "$result$t"
            }
            x {
                if {![info exists  a($fname)]} {
                    set  a($fname) {}
                }
                set t [format "%-0${flength}.${flength}s" $a($fname)]
                set result "$result$t"
            }

        }

    }
    return $result
}

# Procedure read_tcr Not use at the moment

proc read_tcr {inrec aname } {
    global tcr
    upvar $aname a
    set l_tcr [string range $inrec 0 1]
    set cur_pos 0
    foreach {fname flength ftype fdesc} $tcr(${l_tcr}) {
        set a [string range $cur_pos [expr $cur_pos + $flength - 1] ]
        set cur_pos [expr $cur_pos + $flength ]
    }
}

# Precedure print_tcr Not used at the moment

proc print_tcr {fd aname}  {
    global tcr
    upvar $aname a
    set l_tcr $a(tcr)
    set result {}
    foreach {fname flength ftype fdesc} $trc(${l_tcr}) {
        puts $fd [format "%25.25s >%s<" $fdesc $a($fname) ]
    }
}

# Below all Procedures write_??_record to assign values to the tcr fields and
# call write_tcr to constuct the tcr records

proc write_fh_record {fd aname} {
    global tcr
    upvar $aname a
    set rec(tcr) "FH"
    set rec(fhtrans_type) "FH"
    set rec(file_type) "01"
    set rec(file_date_time) $a(file_date_time)
    set rec(activity_source) $a(activity_source)
    set rec(activity_job_name) $a(activity_job_name)
    set rec(suspend_level) "T"
    puts $fd [write_tcr rec]
}

proc write_bh_record {fd aname} {
    global tcr
    upvar $aname a
    set 25spcs [format %-25s " "]
    set 23spcs [format %-23s " "]
    set rec(tcr) "BH"
    set rec(bhtrans_type) "BH"
    set rec(batch_curr) $a(batch_curr)
    set rec(activity_date_time_bh) $a(activity_date_time_bh)
    set rec(merchantid) $a(merchantid)
    set rec(inbatchnbr) $a(inbatchnbr)
    set rec(infilenbr) $a(infilenbr)
    set rec(billind) "N"
    set rec(orig_batch_id) "         "
    set rec(orig_file_id) "         "
    set rec(ext_batch_id) $25spcs
    set rec(ext_file_id) $25spcs
    set rec(sender_id) $a(sender_id)
    set rec(microfilm_nbr) [format %-30s " "]
    set rec(institution_id) $a(institution_id)
    set rec(batch_capture_dt) $a(batch_capture_dt)

    puts $fd [write_tcr rec]
}

# Mas Message Detail Record

proc write_md_record {fd aname} {
    global tcr
    upvar $aname a
    set 25spcs [format %-25s " "]
    set 23spcs [format %-23s " "]
    set rec(tcr) "01"
    set rec(mgtrans_type) "01"
    set rec(trans_id) $a(trans_id)
    set rec(entity_id) $a(entity_id)
    set rec(card_scheme) $a(card_scheme)
    set rec(mas_code) $a(mas_code)
    if {[info exists a(mas_code_downgrade)]} {
       set rec(mas_code_downgrade) $a(mas_code_downgrade)
    } else {
       set rec(mas_code_downgrade) $25spcs
    }
    set rec(nbr_of_items) $a(nbr_of_items)
    set rec(amt_original) $a(amt_original)
    set rec(add_cnt1) "0000000000"
    set rec(add_amt1) "000000000000"
    set rec(add_cnt2) "0000000000"
    set rec(add_amt2) "000000000000"
    if {[info exists a(trans_ref_data)]} {
        set rec(trans_ref_data) $a(trans_ref_data)
    } elseif {[info exists a(arn)]} {
        set rec(trans_ref_data) $a(arn)
    }
    set rec(suspend_reason) [format %-2s " "]
    set rec(external_trans_id) $a(external_trans_id)

    puts $fd [write_tcr rec]
}

proc write_bt_record {fd aname} {
    global tcr
    upvar $aname a
    set rec(tcr) "BT"
    set rec(bttrans_type) "BT"
    set rec(batch_amt) $a(batch_amt)
    set rec(batch_cnt) $a(batch_cnt)
    set rec(batch_add_amt1) [format %012d "0"]
    set rec(batch_add_cnt1) [format %010d "0"]
    set rec(batch_add_amt2) [format %012d "0"]
    set rec(batch_add_cnt2) [format %010d "0"]

    puts $fd [write_tcr rec]
}

proc write_ft_record {fd aname} {
    global tcr
    upvar $aname a
    set rec(tcr) "FT"
    set rec(fttrans_type) "FT"
    set rec(file_amt) $a(file_amt)
    set rec(file_cnt) $a(file_cnt)
    set rec(file_add_amt1) [format %012d "0"]
    set rec(file_add_cnt1) [format %010d "0"]
    set rec(file_add_amt2) [format %012d "0"]
    set rec(file_add_cnt2) [format %010d "0"]

    puts $fd [write_tcr rec]
}

set MAS_FILE_LIB_LOADED 1
