#!/usr/bin/env expect

# Expect script to upload an files
#
# Version 0.0 12/21/04 Joe Cloud
# Version 0.1 10/27/05 Rifat Khan

#****************************************
# Stubs to test calling scripts
#puts "Sent [lindex $argv 0]"
#puts "Got [lindex $argv 1]"
#exit 0

#puts "Failed to send [lindex $argv 0]"
#exit 1
#****************************************
#Reformated to except arguments of different connection
#as File name , IP address, user and password
#****************************************

set logdate [clock seconds]
set curdate [clock format $logdate -format "%Y%m%d"]
set chkdate [string toupper [clock format $logdate -format "%Y-%m-%d"]]
set logdate [clock format $logdate -format "%Y%m%d%H%M%S"]


# Setup initial variable and such
set IP_ADDR "dfw-prd-set-03"


#set mail_list "ACH_email.list"

# These allow connection with Bankcorp
set USERNAME "mcmfelog"
set PASSWORD "\$u3_veRe"


# Procedure to try to exit the script cleanly
proc bailout {error_code} {
        send "bye\r"
        expect {
                "221 Session terminated" {exec sleep 2; exit $error_code}
                timeout                  {exit 99}
        }
        exit 99
};# end bailout


#**** Main Code Module ****
if {$argc == 2} {
set file_2_send [lindex $argv 1]
} elseif {$argc == 1} {
set file_2_send "xfer-$chkdate.htm"
set inst_id [lindex $argv 0]
} else {
set file_2_send "xfer-$chkdate.htm"
}

send_user "\n"
send_user "<>   BEGIN transfering ---IPM FILE--- $file_2_send --- DT $logdate --\n"


set timeout 300
spawn ftp $IP_ADDR 8021
set timeout 30

while 1 { expect {
    "Name*:"            {send "$USERNAME\r"}
    "*rd:"              {send "$PASSWORD\r"}
    "*ftp>" {send_user "Change directory to IN appears to be successful\n";sleep 2; break}
    timeout             {send_user "Timeout problem in login\n"; bailout 1}
}}
puts "about to transfer file"

send "ascii \r"

while 1 { expect {
        "*ftp>" {send_user "file transfer successful\n";sleep 2; break}
        timeout         {send_user "Timeout problem in changing to IN directory\n"; bailout 2}
}}


send "mget $file_2_send \r"

while 1 { expect {
        "*ftp>" {send_user "file transfer successful\n";sleep 2; break}
        "mget*?"       {send "y\r";sleep 2}
        timeout         {send_user "Timeout problem in changing to IN directory\n"; bailout 2}
}}


send "rename $file_2_send $file_2_send-$logdate \r"

while 1 { expect {
        "*ftp>" {send_user "file transfer successful\n";sleep 2; break}
        timeout         {send_user "Timeout problem in changing to IN directory\n"; bailout 2}
}}

send_user "Shutting down session\n"
send "quit\r"

puts $file_2_send

catch {exec /usr/xpg4/bin/grep -i -e fail -e unsuccessful -e error $file_2_send | grep -i -v test} err

puts "$err"

if {$err != "child process exited abnormally"} {
catch {exec echo "$err" | mailx -r clearing@jetpay.com -s "!!! IPM FILE UPLOAD/DNLOAD FAILED !!!" clearing@jetpay.com} result1
exec echo "\\$err" > /clearing/alerts/ipm.alert
}

if {[lindex $argv 0] == ""} {
catch {exec grep "ipm.exp" $file_2_send} x

puts $x

catch {exec echo "\\$x \n\n" | mailx -r clearing@jetpay.com -s "IPM FILE UPLOAD STATUS BY $logdate" clearing@jetpay.com} result

if {$result == ""} {
file delete $file_2_send
} else {
puts $result
}

} else {
set inst_id [lindex $argv 0]
catch {exec grep "ipm.exp.pd.$inst_id" $file_2_send} y
set result2 ""
if {$inst_id == "108" && $y != "child process exited abnormally" } {
catch {exec echo "\\$y \n\n" | mailx -r clearing@jetpay.com -s "IPM FILE UPLOAD STATUS AT $logdate" clearing@jetpay.com Settlement_MIS@integritypaymentsystems.com } result2
} else {
catch {exec echo "\\$y \n\n" | mailx -r clearing@jetpay.com -s "IPM FILE UPLOAD STATUS FOR $inst_id BY $logdate" clearing@jetpay.com} result2
}
puts "$y"
if {$y == "child process exited abnormally"} {
catch {exec echo "Could not find expected $inst_id ipm file to upload. Please, contact clearing oncall" | mailx -r clearing@jetpay.com -s "!!! IPM FILE UPLOAD/DNLOAD FAILED !!!" clearing@jetpay.com assist@jetpay.com } result3
file delete $file_2_send
} else {
file delete $file_2_send
}
}
